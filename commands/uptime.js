const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('uptime')
    .setDescription('‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô'),

  async execute(interaction) {
    try {
      const uptime = interaction.client.uptime;

      if (!uptime) {
        return interaction.reply({ content: '‡∏ö‡∏≠‡∏ó‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• uptime!', ephemeral: true });
      }

      // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
      const days = Math.floor(uptime / (1000 * 60 * 60 * 24));
      const hours = Math.floor((uptime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((uptime % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((uptime % (1000 * 60)) / 1000);

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡∏î‡πâ‡∏ß‡∏¢ EmbedBuilder
      const embed = new EmbedBuilder()
        .setColor('#1E90FF')
        .setTitle('üï∞Ô∏è **Uptime Information** üï∞Ô∏è')
        .setDescription(`
          **‚è≥ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:**  
          üóìÔ∏è **${days} ‡∏ß‡∏±‡∏ô**  
          ‚è∞ **${hours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á**  
          ‚è≤Ô∏è **${minutes} ‡∏ô‡∏≤‡∏ó‡∏µ**  
          ‚ö° **${seconds} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ**  
        `)
        .setFooter({ text: '‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏ó‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤!' })
        .setTimestamp()
        .setThumbnail('https://i.imgur.com/7Ikh67A.png')
        .setImage('https://i.imgur.com/6uHO41R.png');

      // ‡∏™‡πà‡∏á Embed ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß (Ephemeral Message)
      await interaction.reply({ embeds: [embed], ephemeral: true });
    } catch (error) {
      console.error('Error executing /uptime:', error);
      await interaction.reply({ content: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á uptime!', ephemeral: true });
    }
  },
};
